using Silvester.Pathfinder.Official.Database.Extensions;
using Silvester.Pathfinder.Official.Database.Models;
using System;
using System.Collections.Generic;

namespace Silvester.Pathfinder.Official.Database.Seeding.Seeds
{
    public class CurseSeeder : IEntitySeed<Curse>
    {
        public IEnumerable<Curse> GetSeedEntities()
        {
            yield return new Curse { Id = Guid.Parse("c9d8ee02-8f76-42a8-a95a-fc0d05c073d5"), Level = null, Name = "Grave Curse", DifficultyCheck = null, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "A grave curse punishes you for stealing from a tomb or other resting place.", Effect = "ou are hounded by undead creatures of the same level as the curse. Every night, you must attempt a DC 15 flat check. On a failure, an incorporeal undead manifests to hassle and harry you throughout the night, retreating before it can take much damage and often preventing you from gaining a full night’s rest. Whenever you enter a graveyard or other area where bodies are buried, you must succeed at the same flat check or a body animates as a corporeal undead (typically a skeleton or zombie) to attack you. These undead are temporary and exist only to harry you; if you take control of the undead, move on, or otherwise avoid their attacks, incorporeal undead discorporate and corporeal undead collapse into ordinary corpses. The curse can be removed by returning the stolen items to their resting place." };
            yield return new Curse { Id = Guid.Parse("db1b4014-4933-49fb-919d-843c3fbeb5fb"), Level = 2, Name = "Curse of Nightmares", DifficultyCheck = 16, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "This curse plagues you with terrible nightmares whenever you sleep, preventing you from resting properly.", Effect = "You must rest for 12 hours instead of 8 to avoid becoming fatigued and can’t gain any benefits from resting or long-term rest. You can still make your daily preparations." };
            yield return new Curse { Id = Guid.Parse("a93f6011-ae01-4927-9e74-485dd52be9e1"), Level = 3, Name = "Theft of Thought", DifficultyCheck = 18, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "This curse protects a single book and activates against any creature who Steals it.", Effect = "You begin to lose details from your memories, as well as a portion of your procedural memory. After being cursed, the first time you attempt a check using a skill in which you are trained or better, your proficiency rank in the skill used decreases by one rank for as long as you are cursed." };
            yield return new Curse { Id = Guid.Parse("debd8716-f744-4e4c-9e3a-4b6cdbdfc581"), Level = 4, Name = "Slayer's Haunt", DifficultyCheck = 19, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "You are haunted by all those you have killed.", Effect = "You see all creatures around you as those you have slain, still bearing their wounds. You can’t identify, Recall Knowledge about, or otherwise interact with these creatures in any way that involves seeing their true form without first succeeding at a Will save against the curse’s DC to see through the illusion. On a critical failure for such a Will save, you become frightened 1." };
            yield return new Curse { Id = Guid.Parse("a2866bc7-990e-4735-8090-ec6351a5cad1"), Level = 5, Name = "Coward's Roots", DifficultyCheck = 20, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "You find all courage stolen from your heart. When faced with something frightening, you flee in terror or stand frozen in place.", Effect = "At the start of your turn, if you are frightened, you become your choice of immobilized or fleeing until the end of that turn." };
            yield return new Curse { Id = Guid.Parse("8f8119cf-ecf8-412d-ad29-04df287396bc"), Level = 5, Name = "Curse of the Ravenous", DifficultyCheck = 20, SavingThrowStatId = Guid.Parse("83f532a1-dad3-4dc8-b13d-77e69959444a"), Description = "This hideous curse kills through constant hunger. You become gaunt and repeatedly gnash your teeth.", Effect = "No matter how much you eat, you aren’t satiated. After 1 day, you begin starving. Each week, you receive a new saving throw against the curse." };
            yield return new Curse { Id = Guid.Parse("cc8c8901-28c6-49d0-b157-5e360182bd46"), Level = 6, Name = "Wizard's Ward", DifficultyCheck = 22, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "A wizard’s ward is placed upon a single book, usually a spellbook. If you damage the book, you must attempt a save against the curse’s effect.", Effect = "You take 5d6 damage of the same damage type as the damage you dealt to the book, and the damage can’t be healed as long as the curse lasts. Repairing the book, including replacing any missing text, ends this curse." };
            yield return new Curse { Id = Guid.Parse("2638d791-3e60-457d-8450-bf0a09099568"), Level = 7, Name = "Oath of the Fresh", DifficultyCheck = 23, SavingThrowStatId = Guid.Parse("83f532a1-dad3-4dc8-b13d-77e69959444a"), Description = "When you swear an oath, you must obey that oath or suffer terrible consequences.", Effect = "Each time you make a promise to someone, an ornate symbol representing that promise is magically carved into your flesh. Breaking any of these promises causes the symbol tattoo to grow into a gaping wound, dealing 3d6 slashing damage to you; damage from the curse can’t be healed as long as the curse is still in effect." };
            yield return new Curse { Id = Guid.Parse("cb8e0c92-9867-4cf1-b70c-dbff7df35ef4"), Level = 9, Name = "Sellsword's Folly", DifficultyCheck = 26, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "Even the most experienced combat veteran becomes as reckless as a rookie when suffering from sellsword’s folly.", Effect = "The chaos of combat overwhelms you. Each time you roll initiative for a combat encounter, you must attempt a new saving throw against the curse; on a failure, you become confused for 1 round. This is an incapacitation effect." };
            yield return new Curse { Id = Guid.Parse("aac52ac8-ae3d-4386-a81d-05f38ae1372f"), Level = 11, Name = "Curse of Slumber", DifficultyCheck = 28, SavingThrowStatId = Guid.Parse("83f532a1-dad3-4dc8-b13d-77e69959444a"), Description = "This legendary curse sends you into a sleep indistinguishable from death.", Effect = "You fall asleep for 1 round (or permanently on a critical failure) and seem to be dead; a creature must succeed at a DC 30 Medicine check to realize you are alive. Noise doesn’t awaken you, but taking damage gives you a new saving throw against the curse." };
            yield return new Curse { Id = Guid.Parse("f9059558-883a-4d04-a080-5d5511da93de"), Level = 12, Name = "Reviling Earth", DifficultyCheck = 30, SavingThrowStatId = Guid.Parse("83f532a1-dad3-4dc8-b13d-77e69959444a"), Description = "A reviling earth curse usually appears across a specific geographical region, such as a ruined town, a necromancer’s domain, or a similar area.", Effect = "When you enter the area, you become doomed 1, or doomed 2 on a critical failure." };
            yield return new Curse { Id = Guid.Parse("377a9414-6b18-4634-a5e2-35ac9225a2da"), Level = 13, Name = "Spirit Anchor", DifficultyCheck = 31, SavingThrowStatId = Guid.Parse("83f532a1-dad3-4dc8-b13d-77e69959444a"), Description = "This curse prevents your soul from moving on after death.", Effect = " If you die while affected, your spirit is anchored to the Material Plane, and you become a ghost or other incorporeal undead." };
            yield return new Curse { Id = Guid.Parse("65c44561-e8b0-4f7a-b65c-3a42d458721e"), Level = 15, Name = "Unending Thirst", DifficultyCheck = 32, SavingThrowStatId = Guid.Parse("83f532a1-dad3-4dc8-b13d-77e69959444a"), Description = "This curse kills through dehydration in the same vein as the curse of the ravenous, but with deadly speed.", Effect = "You gain no benefit from drinking water or other liquids and begin suffering from thirst. Each day, you receive a new saving throw against the curse." };
            yield return new Curse { Id = Guid.Parse("7df1d5bf-f713-4416-a429-aaf001da62c9"), Level = 18, Name = "Reviled of Nature", DifficultyCheck = 38, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "This curse makes the hunter into the hunted, drawing the ire of animals wherever you go.", Effect = "Creatures of the natural world abhor you. Whenever an animal becomes aware of you, it must attempt a Will save against the curse. On a failure, it attacks you and fights to the death." };
            yield return new Curse { Id = Guid.Parse("9a5c5a35-e734-4557-ba0c-0b1d8cbea242"), Level = 19, Name = "Thief's Retribution", DifficultyCheck = 39, SavingThrowStatId = Guid.Parse("83f532a1-dad3-4dc8-b13d-77e69959444a"), Description = "This punishment causes you to lose something dear to you whenever you rob or steal. If you have nothing to lose, the curse exacts its punishment upon your body instead.", Effect = "Each time you steal something, you lose something more valuable—this item is whisked away and can’t be found again. Typically this item is one of greater monetary value, but it might be one of greater value in another sense, such as one of greater emotional value, or something you need to complete a task. If you aren’t carrying anything of greater value at the time of the theft, you lose one of your limbs instead, taking 10d6 slashing damage and losing use of that limb. The damage can’t be healed, nor the limb restored, until the stolen item is returned, even through use of spells like regenerate." };
            yield return new Curse { Id = Guid.Parse("777ae2c9-85e4-444a-9bce-8ef9af37eee4"), Level = 20, Name = "Sword of Anathema", DifficultyCheck = 40, SavingThrowStatId = Guid.Parse("a71929b0-9dff-492a-9bf9-8f9cadda198c"), Description = "With divine intervention, followers of a deity can bestow this curse upon an enemy of the faith.", Effect = "You are marked by the deity invoked as an enemy of the church. You gain weakness 10 to damage dealt by worshippers of that deity." };
        }

        public class CurseTraitJoiner : IEntityJoin<Curse, Trait>
        {
            public Trait[] Join(Curse curse, Trait[] traits)
            {
                return curse.Name switch
                {
                    "Grave Curse" => traits.Filter((t) => t.Name, "Curse", "Magical", "Necromancy"),
                    "Curse of Nightmares" => traits.Filter((t) => t.Name, "Curse", "Illusion", "Magical", "Mental"),
                    "Theft of Thought" => traits.Filter((t) => t.Name, "Curse", "Enchantment", "Magical", "Mental"),
                    "Slayer's Haunt" => traits.Filter((t) => t.Name, "Curse", "Illusion", "Magical", "Visual" ),
                    "Coward's Roots" => traits.Filter((t) => t.Name, "Curse", "Enchantment", "Fear", "Magical", "Mental"),
                    "Curse of the Ravenous" => traits.Filter((t) => t.Name, "Curse", "Magical", "Transmutation"),
                    "Wizard's Ward" => traits.Filter((t) => t.Name, "Curse", "Abjuration", "Magical"),
                    "Oath of the Fresh" => traits.Filter((t) => t.Name, "Curse", "Abjuration", "Magical"),
                    "Sellsword's Folly" => traits.Filter((t) => t.Name, "Curse", "Emotion", "Enchantment", "Magical", "Mental"),
                    "Curse of Slumber" => traits.Filter((t) => t.Name, "Curse", "Incapacitation", "Magical", "Necromancy", "Sleep"),
                    "Reviling Earth" => traits.Filter((t) => t.Name, "Curse", "Death", "Magical", "Necromancy"),
                    "Spirit Anchor" => traits.Filter((t) => t.Name, "Curse", "Magical", "Necromancy", "Negative"),
                    "Unending Thirst" => traits.Filter((t) => t.Name, "Curse", "Magical", "Transmutation"),
                    "Reviled of Nature" => traits.Filter((t) => t.Name, "Curse", "Emotion", "Enchantment", "Magical", "Mental"),
                    "Thief's Retribution" => traits.Filter((t) => t.Name, "Curse", "Conjuration", "Magical"),
                    "Sword of Anathema" => traits.Filter((t) => t.Name, "Curse", "Divine", "Evocation"),
                    
                    _ => throw new InvalidOperationException("All curses have at least one trait so chances are we're missing one here.")
                };
            }
        }
    }
}